name: "Create Releases"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for linux
            args: ""
          - platform: "windows-latest" # for windows
            args: ""

    runs-on: ${{ matrix.platform }} # cross-platform compilation
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install

      - name: Create Env File
        run: |
          echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> .env
          echo "VITE_CRYPTO_SECRET=${{ secrets.VITE_CRYPTO_SECRET }}" >> .env
          echo "VITE_LOCALE=${{ secrets.VITE_LOCALE }}" >> .env
          echo "VITE_TIMEZONE=${{ secrets.VITE_TIMEZONE }}" >> .env
          echo "VITE_WHATSAPP_COUNTRY_CODE=${{ secrets.VITE_WHATSAPP_COUNTRY_CODE }}" >> .env
          echo ".env file created successfully"

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
